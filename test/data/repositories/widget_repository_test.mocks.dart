// Mocks generated by Mockito 5.1.0 from annotations
// in watcha_body/test/data/repositories/widget_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;
import 'package:watcha_body/data/data_layer/database_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDatabase_0 extends _i1.Fake implements _i2.Database {}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get tableCreationQuery =>
      (super.noSuchMethod(Invocation.getter(#tableCreationQuery),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  set tableCreationQuery(Map<String, String>? _tableCreationQuery) => super
      .noSuchMethod(Invocation.setter(#tableCreationQuery, _tableCreationQuery),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i2.Database>.value(_FakeDatabase_0()))
          as _i4.Future<_i2.Database>);
  @override
  _i4.Future<void> insert({String? tableName, Map<String, dynamic>? map}) =>
      (super.noSuchMethod(
          Invocation.method(#insert, [], {#tableName: tableName, #map: map}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> update(
          {String? tableName, Map<String, dynamic>? map, String? id}) =>
      (super.noSuchMethod(
          Invocation.method(
              #update, [], {#tableName: tableName, #map: map, #id: id}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void delete({String? tableName, int? id}) => super.noSuchMethod(
      Invocation.method(#delete, [], {#tableName: tableName, #id: id}),
      returnValueForMissingStub: null);
  @override
  _i4.Future<List<Map<String, dynamic>>> getData(
          {String? tableName,
          int? limit,
          String? orderBy,
          DateTime? startDate,
          DateTime? endDate}) =>
      (super.noSuchMethod(
              Invocation.method(#getData, [], {
                #tableName: tableName,
                #limit: limit,
                #orderBy: orderBy,
                #startDate: startDate,
                #endDate: endDate
              }),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<void> createTable({String? query}) =>
      (super.noSuchMethod(Invocation.method(#createTable, [], {#query: query}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
